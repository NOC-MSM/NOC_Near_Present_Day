#!/bin/bash

WD=$PWD

SYSTEM=Anemone

BRANCH=branch_4.2
#COMMIT=b1b3d9e142670c8358f240a8eeb13979600d8039
TAG=4.2.2

MEDUSA_Br=16-medusa-nemo4-2-1-3
MEDDIR=${WD}/MEDUSA_git
NEMODIR=${WD}/nemo
USE_EXISTING_NEMO=0
STOP=0

# Handle arguments
usage() { echo "Usage: $0 [-b branch] [-c commit | -t tag] [-d directory] [-s system] [-u use_existing_nemo] [-x stop_after_download]" 1>&2; exit 1; }
while getopts ":b:c:t:d:s:u:x" o; do
    case "${o}" in
        b)
            BRANCH=${OPTARG}
            ;;
        c)
            COMMIT=${OPTARG}
            ;;
        t)
            TAG=${OPTARG}
            ;;
        d)
            NEMODIR=$(realpath "${OPTARG}")
            ;;
        s)
            SYSTEM=${OPTARG}
            ;;
        u)
            USE_EXISTING_NEMO=1
            ;;
        x)
            STOP=1
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

# Check only one of "-c" or "-t" is specified
if [ -n "${COMMIT}" ] && [ -n "${TAG}" ]; then
    echo "Specify only one of "-c" or "-t"."
    exit
fi

# Check system is supported and ensure 'correct' case of $SYSTEM
if [[ "$SYSTEM" =~ ^([aA][nN][eE][mM][oO][nN][eE])$ ]]; then
      SYSTEM=Anemone
    elif [[ "$SYSTEM" =~ ^([aA][rR][cC][hH][eE][rR][2])$ ]]; then
      SYSTEM=Archer2
    else
      echo "System not recognised. Options are: Anemone, Archer2"
    exit
fi



if [[ "$USE_EXISTING_NEMO" == 0 ]]; then
# Download NEMO
 echo "Downloading NEMO"

# Checking out from NEMO GitLab
 git clone https://forge.nemo-ocean.eu/nemo/nemo.git -b "$BRANCH" "$NEMODIR" || exit

 if [ -n "${COMMIT}" ]; then
     cd "$NEMODIR" || exit
     git reset --hard "$COMMIT" || exit
     cd "$WD" || exit
 fi

 if [ -n "${TAG}" ]; then
     cd "$NEMODIR" || exit
     git reset --hard "$TAG" || exit
     cd "$WD" || exit
 fi

else
 if [ -d "${NEMODIR}" ]; then
  cd "$NEMODIR" || exit
  echo "Using existing clone of nemo"
 else
  echo "Request to use non-existent clone of nemo"
  exit
 fi
fi

if [[ "$STOP" == 1 ]]; then
    exit
fi

# Download MEDUSA
echo "Downloading MEDUSA"

# Checking out from MEDUSA gitlab
git clone https://git.noc.ac.uk/acc/medusa_4.2.x.git -b ${MEDUSA_Br} ${MEDDIR} || exit 

##########################################
# put MEDUSA files at the right place :
##########################################
cd ${WD}
./scripts/add_msa_to_NPD_nemo



###########################################
# SYSTEM
###########################################
# System specific options

cd ${WD}

echo "Setting up configuration and scripts for ${SYSTEM}"

echo $PWD

ln -sfT compile_nemo_${SYSTEM} scripts/compile_nemo
ln -sfT compile_tools_${SYSTEM} scripts/compile_tools
ln -sfT mkslurm_NPD_${SYSTEM} scripts/python/mkslurm_NPD

ln -sfT INPUT_eORCA1_${SYSTEM} data/INPUT_eORCA1
ln -sfT INPUT_eORCA025_${SYSTEM} data/INPUT_eORCA025
ln -sfT INPUT_eORCA12_${SYSTEM} data/INPUT_eORCA12


# Copy
if [[ "$USE_EXISTING_NEMO" == 0 ]]; then
  echo "Copying customized files into ${NEMODIR}"
  CP_ARG="-r"
else
  echo "Updating customized files in ${NEMODIR}"
  CP_ARG="-ru"
fi

cp "$CP_ARG" "${WD}"/{arch,cfgs,data,ext,scripts,tools} "$NEMODIR"/. || exit

cp "$CP_ARG" "${WD}"/scripts/TIDY "$NEMODIR"/cfgs/GLOBAL_QCO/eORCA1/.
cp "$CP_ARG" "${WD}"/scripts/TIDY "$NEMODIR"/cfgs/GLOBAL_QCO/eORCA025/.
cp "$CP_ARG" "${WD}"/scripts/TIDY "$NEMODIR"/cfgs/GLOBAL_QCO/eORCA12/.

###########################################
# TOOLS
###########################################
# Compile tools
#echo "Compiling tools"
#cd "$NEMODIR"/tools || exit
#../scripts/compile_tools || exit

###########################################
# CONFIGURATIONS
###########################################

# Add and compile cfgs
echo "Compiling NEMO"
cd "$NEMODIR" || exit
../scripts/compile_nemo || exit

# Bye-Bye
squeue -u "$USER"
cd "$WD" || exit
